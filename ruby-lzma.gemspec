# -*- encoding: utf-8 -*-
 
Gem::Specification.new do |s|
  s.name = %q{ruby-lzma}
  s.version = "0.3"
  s.homepage = "http://github.com/ianlevesque/ruby-lzma"
  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Ian Levesque"]
  s.date = %q{2009-3-27}
  s.description = %q{Ruby-LZMA is a set of Ruby and JRuby methods for simple LZMA compression and decompression.}
  s.email = %q{ian@ephemeronindustries.com}
  s.files = ["Rakefile", "ext", "ext/Alloc.cpp", "ext/Alloc.h", "ext/BinTree.h", "ext/BinTree2.h", "ext/BinTree3.h", "ext/BinTree3Z.h", "ext/BinTree4.h", "ext/BinTree4b.h", "ext/BinTreeMain.h", "ext/BranchX86.c", "ext/BranchX86.h", "ext/CRC.cpp", "ext/CRC.h", "ext/C_FileIO.h", "ext/CommandLineParser.h", "ext/Defs.h", "ext/FileStreams.h", "ext/HC.h", "ext/HC2.h", "ext/HC3.h", "ext/HC4.h", "ext/HC4b.h", "ext/HCMain.h", "ext/ICoder.h", "ext/IMatchFinder.h", "ext/IStream.h", "ext/InBuffer.cpp", "ext/InBuffer.h", "ext/LZInWindow.cpp", "ext/LZInWindow.h", "ext/LZMA.h", "ext/LZMADecoder.h", "ext/LZMAEncoder.cpp", "ext/LZMAEncoder.h", "ext/LZOutWindow.cpp", "ext/LZOutWindow.h", "ext/LzmaBench.h", "ext/LzmaDecode.c", "ext/LzmaDecode.h", "ext/LzmaRam.cpp", "ext/LzmaRam.h", "ext/LzmaRamDecode.c", "ext/LzmaRamDecode.h", "ext/Makefile", "ext/MyCom.h", "ext/MyGuidDef.h", "ext/MyInitGuid.h", "ext/MyUnknown.h", "ext/MyWindows.h", "ext/OutBuffer.cpp", "ext/OutBuffer.h", "ext/Pat.h", "ext/Pat2.h", "ext/Pat2H.h", "ext/Pat2R.h", "ext/Pat3H.h", "ext/Pat4H.h", "ext/PatMain.h", "ext/RangeCoder.h", "ext/RangeCoderBit.cpp", "ext/RangeCoderBit.h", "ext/RangeCoderBitTree.h", "ext/RangeCoderOpt.h", "ext/StdAfx.h", "ext/StreamUtils.cpp", "ext/StreamUtils.h", "ext/String.h", "ext/StringConvert.h", "ext/StringToInt.h", "ext/Types.h", "ext/Vector.h", "ext/extconf.rb", "ext/lzma_ruby.cpp", "ext/lzmalib.h", "ext/mylib.cpp", "java", "java/SevenZip", "java/SevenZip/CRC.java", "java/SevenZip/Compression", "java/SevenZip/Compression/LZ", "java/SevenZip/Compression/LZ/BinTree.class", "java/SevenZip/Compression/LZ/BinTree.java", "java/SevenZip/Compression/LZ/InWindow.class", "java/SevenZip/Compression/LZ/InWindow.java", "java/SevenZip/Compression/LZ/OutWindow.class", "java/SevenZip/Compression/LZ/OutWindow.java", "java/SevenZip/Compression/LZMA", "java/SevenZip/Compression/LZMA/Base.class", "java/SevenZip/Compression/LZMA/Base.java", "java/SevenZip/Compression/LZMA/Decoder$LenDecoder.class", "java/SevenZip/Compression/LZMA/Decoder$LiteralDecoder$Decoder2.class", "java/SevenZip/Compression/LZMA/Decoder$LiteralDecoder.class", "java/SevenZip/Compression/LZMA/Decoder.class", "java/SevenZip/Compression/LZMA/Decoder.java", "java/SevenZip/Compression/LZMA/Encoder$LenEncoder.class", "java/SevenZip/Compression/LZMA/Encoder$LenPriceTableEncoder.class", "java/SevenZip/Compression/LZMA/Encoder$LiteralEncoder$Encoder2.class", "java/SevenZip/Compression/LZMA/Encoder$LiteralEncoder.class", "java/SevenZip/Compression/LZMA/Encoder$Optimal.class", "java/SevenZip/Compression/LZMA/Encoder.class", "java/SevenZip/Compression/LZMA/Encoder.java", "java/SevenZip/Compression/RangeCoder", "java/SevenZip/Compression/RangeCoder/BitTreeDecoder.class", "java/SevenZip/Compression/RangeCoder/BitTreeDecoder.java", "java/SevenZip/Compression/RangeCoder/BitTreeEncoder.class", "java/SevenZip/Compression/RangeCoder/BitTreeEncoder.java", "java/SevenZip/Compression/RangeCoder/Decoder.class", "java/SevenZip/Compression/RangeCoder/Decoder.java", "java/SevenZip/Compression/RangeCoder/Encoder.class", "java/SevenZip/Compression/RangeCoder/Encoder.java", "java/SevenZip/ICodeProgress.class", "java/SevenZip/ICodeProgress.java", "java/SevenZip/LzmaAlone.java", "java/SevenZip/LzmaBench.java", "java/com", "java/com/ephemeronindustries", "java/com/ephemeronindustries/lzma", "java/com/ephemeronindustries/lzma/LZMA.class", "java/com/ephemeronindustries/lzma/LZMA.java", "java/lzma_java.jar", "lib", "lib/lzma.rb", "ruby-lzma.gemspec", "test", "test/test_lzma.rb"]
  s.has_rdoc = false
  s.require_paths = ["lib", "ext"]
  s.summary = %q{Simple LZMA compression/decompression methods.}
  s.test_files = ["test/test_lzma.rb"]
  s.extensions = ["ext/extconf.rb"]
end
